<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WCSharp.DateTime</name>
    </assembly>
    <members>
        <member name="T:WCSharp.DateTime.DateTimeSyncMethod">
            <summary>
            Defines a number of different methods by which a synchronised <see cref="T:WCSharp.DateTime.WcDateTime"/> can be calculated.
            </summary>
        </member>
        <member name="F:WCSharp.DateTime.DateTimeSyncMethod.Earliest">
            <summary>
            Picks the earliest time among all players.
            </summary>
        </member>
        <member name="F:WCSharp.DateTime.DateTimeSyncMethod.Latest">
            <summary>
            Picks the latest time among all players.
            </summary>
        </member>
        <member name="F:WCSharp.DateTime.DateTimeSyncMethod.Average">
            <summary>
            Picks the average time of all players.
            </summary>
        </member>
        <member name="F:WCSharp.DateTime.DateTimeSyncMethod.BestFit">
            <summary>
            Picks a time that minimizes the time difference of the chosen time compared to that of all players.
            <para>In practice, this means it will pick the middle player on uneven player counts, or the average of the middle two players on even player counts.</para>
            </summary>
        </member>
        <member name="T:WCSharp.DateTime.WcDateTime">
            <summary>
            Represents an instant in time, with a precision in seconds.
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcDateTime.Second">
            <summary>
            Returns the number of whole seconds in this <see cref="T:WCSharp.DateTime.WcDateTime"/> (as a timestamp).
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcDateTime.Minute">
            <summary>
            Returns the number of whole minutes in this <see cref="T:WCSharp.DateTime.WcDateTime"/> (as a timestamp).
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcDateTime.Hour">
            <summary>
            Returns the number of whole hours in this <see cref="T:WCSharp.DateTime.WcDateTime"/> (as a timestamp).
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcDateTime.Day">
            <summary>
            Returns the number of whole days in this <see cref="T:WCSharp.DateTime.WcDateTime"/> (as a timestamp).
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcDateTime.Month">
            <summary>
            Returns the number of whole months in this <see cref="T:WCSharp.DateTime.WcDateTime"/> (as a timestamp).
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcDateTime.Year">
            <summary>
            Returns the number of whole years in this <see cref="T:WCSharp.DateTime.WcDateTime"/> (as a timestamp).
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcDateTime.DayOfWeek">
            <summary>
            Returns the current day of the week.
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcDateTime.DayOfYear">
            <summary>
            Returns the current day of the year.
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcDateTime.Date">
            <summary>
            Returns the current date (hour/minutes/seconds removed).
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcDateTime.TimeOfDay">
            <summary>
            Returns a <see cref="T:WCSharp.DateTime.WcTimeSpan"/> representing the hour, minute and second of the day.
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcDateTime.Zero">
            <summary>
            Returns the zero <see cref="T:WCSharp.DateTime.WcDateTime"/> value, equivalent to January 1st, 1970, 00:00:00.
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcDateTime.MinValue">
            <summary>
            Returns the minimum <see cref="T:WCSharp.DateTime.WcDateTime"/> value, equivalent to December 13th, 1901, 20:45:52.
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcDateTime.MaxValue">
            <summary>
            Returns the maximum <see cref="T:WCSharp.DateTime.WcDateTime"/> value, equivalent to January 19, 2038, 03:14:07.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.#ctor(System.Int32)">
            <summary>
            Creates a new <see cref="T:WCSharp.DateTime.WcDateTime"/> with the given number of seconds since January 1st, 1970, 00:00:00.
            </summary>
            <param name="seconds"></param>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:WCSharp.DateTime.WcDateTime"/> with the given year, month and day.
            <para>The given date must be between January 1st, 1970, 00:00:00 and January 19, 2038, 03:14:07.</para>
            </summary>
            <param name="year">The year. Must be between 1970 and 2038.</param>
            <param name="month">The month of the year. Must be between 1 and 12.</param>
            <param name="day">The day of the month.</param>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="year">The year. Must be between 1970 and 2038.</param>
            <param name="month">The month of the year. Must be between 1 and 12.</param>
            <param name="day">The day of the month.</param>
            <param name="hour">The hour of the day. Must be between 0 and 23.</param>
            <param name="minutes">The minutes of the hour. Must be between 0 and 59.</param>
            <param name="seconds">The seconds of the minute. Must be between 0 and 59.</param>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.op_Addition(WCSharp.DateTime.WcDateTime,WCSharp.DateTime.WcTimeSpan)">
            <summary>
            Returns a new <see cref="T:WCSharp.DateTime.WcDateTime"/> that is equal to <paramref name="a"/> plus the number of seconds in <paramref name="b"/>.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.op_Subtraction(WCSharp.DateTime.WcDateTime,WCSharp.DateTime.WcTimeSpan)">
            <summary>
            Returns a new <see cref="T:WCSharp.DateTime.WcDateTime"/> that is equal to <paramref name="a"/> minus the number of seconds in <paramref name="b"/>.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.op_Subtraction(WCSharp.DateTime.WcDateTime,WCSharp.DateTime.WcDateTime)">
            <summary>
            Returns a <see cref="T:WCSharp.DateTime.WcTimeSpan"/> representing the time from <paramref name="a"/> to <paramref name="b"/>.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.op_Equality(WCSharp.DateTime.WcDateTime,WCSharp.DateTime.WcDateTime)">
            <summary>
            Returns true if <paramref name="a"/> is the same time as <paramref name="b"/>.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.op_Inequality(WCSharp.DateTime.WcDateTime,WCSharp.DateTime.WcDateTime)">
            <summary>
            Returns true if <paramref name="a"/> is not the same time as <paramref name="b"/>.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.op_LessThan(WCSharp.DateTime.WcDateTime,WCSharp.DateTime.WcDateTime)">
            <summary>
            Returns true if <paramref name="a"/> is earlier than <paramref name="b"/>.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.op_LessThanOrEqual(WCSharp.DateTime.WcDateTime,WCSharp.DateTime.WcDateTime)">
            <summary>
            Returns true if <paramref name="a"/> is earlier than or equal to <paramref name="b"/>.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.op_GreaterThan(WCSharp.DateTime.WcDateTime,WCSharp.DateTime.WcDateTime)">
            <summary>
            Returns true if <paramref name="a"/> is later than <paramref name="b"/>.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.op_GreaterThanOrEqual(WCSharp.DateTime.WcDateTime,WCSharp.DateTime.WcDateTime)">
            <summary>
            Returns true if <paramref name="a"/> is later than or equal to <paramref name="b"/>.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.Add(WCSharp.DateTime.WcTimeSpan)">
            <summary>
            Returns a new <see cref="T:WCSharp.DateTime.WcDateTime"/> that is an amount of time indicated by <paramref name="value"/> into the future.
            </summary>
            <param name="value">The amount of time to move this instance into the future.</param>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.Subtract(WCSharp.DateTime.WcDateTime)">
            <summary>
            Returns a new <see cref="T:WCSharp.DateTime.WcDateTime"/> that is an amount of time indicated by <paramref name="value"/> into the past.
            </summary>
            <param name="value">The amount of time to move this instance into the past.</param>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.AddSeconds(System.Int32)">
            <summary>
            Returns a new <see cref="T:WCSharp.DateTime.WcDateTime"/> that is a given number of seconds into the future.
            </summary>
            <param name="seconds">The amount of seconds to move this instance into the future.</param>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.AddMinutes(System.Int32)">
            <summary>
            Returns a new <see cref="T:WCSharp.DateTime.WcDateTime"/> that is a given number of minutes into the future.
            </summary>
            <param name="minutes">The amount of minutes to move this instance into the future.</param>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.AddHours(System.Int32)">
            <summary>
            Returns a new <see cref="T:WCSharp.DateTime.WcDateTime"/> that is a given number of hours into the future.
            </summary>
            <param name="hours">The amount of hours to move this instance into the future.</param>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.AddDays(System.Int32)">
            <summary>
            Returns a new <see cref="T:WCSharp.DateTime.WcDateTime"/> that is a given number of days into the future.
            </summary>
            <param name="days">The amount of days to move this instance into the future.</param>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.AddMonths(System.Int32)">
            <summary>
            Returns a new <see cref="T:WCSharp.DateTime.WcDateTime"/> that is a given number of months into the future.
            </summary>
            <param name="months">The amount of months to move this instance into the future.</param>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.AddYears(System.Int32)">
            <summary>
            Returns a new <see cref="T:WCSharp.DateTime.WcDateTime"/> that is a given number of years into the future.
            </summary>
            <param name="years">The amount of years to move this instance into the future.</param>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.CompareTo(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.CompareTo(WCSharp.DateTime.WcDateTime)">
            <inheritdoc/>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.Equals(WCSharp.DateTime.WcDateTime)">
            <inheritdoc/>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.ToString">
            <summary>
            Outputs this <see cref="T:WCSharp.DateTime.WcDateTime"/> in the default format of "yyyy-MM-dd HH:mm:ss".
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.ToString(System.String)">
            <summary>
            Returns a string representation using the given format.
            <para>See the wiki for more information on the format specification.</para>
            </summary>
            <param name="format">The format to print the string in.</param>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.Deserialize(System.String)">
            <summary>
            Attempts to parse the given string as the number of seconds since January 1st, 1970.
            </summary>
            <returns>Null if <paramref name="string"/> is not a valid integer.</returns>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.Serialize(WCSharp.DateTime.WcDateTime)">
            <summary>
            Returns a string representing the number of seconds since January 1st, 1970 contained in <paramref name="wcDateTime"/>.
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcDateTime.LocalTime">
            <summary>
            The time for the local player.
            <para>WARNING: Be careful when using this! You may trigger a desync!</para>
            <para>For a danger-free timestamp, use <see cref="M:WCSharp.DateTime.WcDateTime.GetCurrentTime(System.Action{WCSharp.DateTime.WcDateTime},WCSharp.DateTime.DateTimeSyncMethod)"/>.</para>
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.GetCurrentTime(System.Action{WCSharp.DateTime.WcDateTime},WCSharp.DateTime.DateTimeSyncMethod)">
            <summary>
            This will produce a synchronised time for all players. The given action will be called once a synchronised time has been determined.
            <para>This is done by individually querying the time, synchronizing this data across all players, and then deciding an overall time.</para>
            </summary>
            <param name="action">This action will be called when the synchronised time is determined.</param>
            <param name="method">The method it should use for determining the synchronised time.</param>
        </member>
        <member name="M:WCSharp.DateTime.WcDateTime.TryGetCurrentTime(WCSharp.DateTime.WcDateTime@,WCSharp.DateTime.DateTimeSyncMethod)">
            <summary>
            This will attempt to immediately return a synchronised time for all players, if it has already been calculated.
            If it has not been calculated, this will return false.
            <para>If it has not been calculated, will start a calculation procedure behind the scenes, but this will take some time.</para>
            </summary>
            <param name="wcDateTime">The synchronised time, if available.</param>
            <param name="method">The method it should use for determining the synchronised time.</param>
            <returns>Whether the retrieval was successful.</returns>
        </member>
        <member name="T:WCSharp.DateTime.WcTimeSpan">
            <summary>
            Represents a duration of time, with a precision in seconds.
            </summary>
        </member>
        <member name="F:WCSharp.DateTime.WcTimeSpan.SECONDS_PER_MINUTE">
            <summary>
            The number of seconds in a minute.
            </summary>
        </member>
        <member name="F:WCSharp.DateTime.WcTimeSpan.SECONDS_PER_HOUR">
            <summary>
            The number of seconds in an hour.
            </summary>
        </member>
        <member name="F:WCSharp.DateTime.WcTimeSpan.SECONDS_PER_DAY">
            <summary>
            The number of seconds in a day.
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcTimeSpan.Seconds">
            <summary>
            The number of whole seconds in this <see cref="T:WCSharp.DateTime.WcTimeSpan"/> (as a timestamp).
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcTimeSpan.Minutes">
            <summary>
            The number of whole minutes in this <see cref="T:WCSharp.DateTime.WcTimeSpan"/> (as a timestamp).
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcTimeSpan.Hours">
            <summary>
            The number of whole hours in this <see cref="T:WCSharp.DateTime.WcTimeSpan"/> (as a timestamp).
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcTimeSpan.Days">
            <summary>
            The number of whole days in this <see cref="T:WCSharp.DateTime.WcTimeSpan"/> (as a timestamp).
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcTimeSpan.TotalSeconds">
            <summary>
            The total length of this <see cref="T:WCSharp.DateTime.WcTimeSpan"/> represented in seconds.
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcTimeSpan.TotalMinutes">
            <summary>
            The total length of this <see cref="T:WCSharp.DateTime.WcTimeSpan"/> represented in minutes.
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcTimeSpan.TotalHours">
            <summary>
            The total length of this <see cref="T:WCSharp.DateTime.WcTimeSpan"/> represented in hours.
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcTimeSpan.TotalDays">
            <summary>
            The total length of this <see cref="T:WCSharp.DateTime.WcTimeSpan"/> represented in days.
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcTimeSpan.Zero">
            <summary>
            A timespan with a duration of 0.
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcTimeSpan.MinValue">
            <summary>
            A timespan with a duration of <see cref="F:System.Int32.MinValue"/> (in seconds).
            </summary>
        </member>
        <member name="P:WCSharp.DateTime.WcTimeSpan.MaxValue">
            <summary>
            A timespan with a duration of <see cref="F:System.Int32.MaxValue"/> (in seconds).
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.#ctor(System.Int32)">
            <summary>
            Creates a new <see cref="T:WCSharp.DateTime.WcTimeSpan"/> instance with a duration of the given number of seconds.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:WCSharp.DateTime.WcTimeSpan"/> instance with a duration of the given number of hours, minutes and seconds.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new <see cref="T:WCSharp.DateTime.WcTimeSpan"/> instance with a duration of the given number of days, hours, minutes and seconds.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.op_UnaryNegation(WCSharp.DateTime.WcTimeSpan)">
            <summary>
            Returns a new <see cref="T:WCSharp.DateTime.WcTimeSpan"/> that is the negation of the time represented by <paramref name="a"/>.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.op_Subtraction(WCSharp.DateTime.WcTimeSpan,WCSharp.DateTime.WcTimeSpan)">
            <summary>
            Returns a new <see cref="T:WCSharp.DateTime.WcTimeSpan"/> that is equal to <paramref name="a"/> minus <paramref name="b"/>.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.op_UnaryPlus(WCSharp.DateTime.WcTimeSpan)">
            <summary>
            Since no changes are required, simply returns the given <see cref="T:WCSharp.DateTime.WcTimeSpan"/>.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.op_Addition(WCSharp.DateTime.WcTimeSpan,WCSharp.DateTime.WcTimeSpan)">
            <summary>
            Returns a new <see cref="T:WCSharp.DateTime.WcTimeSpan"/> that is equal to <paramref name="a"/> plus <paramref name="b"/>.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.op_Equality(WCSharp.DateTime.WcTimeSpan,WCSharp.DateTime.WcTimeSpan)">
            <summary>
            Returns true if <paramref name="a"/> represents an equally long time as <paramref name="b"/>.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.op_Inequality(WCSharp.DateTime.WcTimeSpan,WCSharp.DateTime.WcTimeSpan)">
            Returns true if <paramref name="a"/> does not represent an equally long time as <paramref name="b"/>.
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.op_LessThan(WCSharp.DateTime.WcTimeSpan,WCSharp.DateTime.WcTimeSpan)">
            Returns true if <paramref name="a"/> represents a shorter time than <paramref name="b"/>.
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.op_LessThanOrEqual(WCSharp.DateTime.WcTimeSpan,WCSharp.DateTime.WcTimeSpan)">
            Returns true if <paramref name="a"/> represents a shorter or equivalent time as <paramref name="b"/>.
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.op_GreaterThan(WCSharp.DateTime.WcTimeSpan,WCSharp.DateTime.WcTimeSpan)">
            Returns true if <paramref name="a"/> represents a longer time than <paramref name="b"/>.
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.op_GreaterThanOrEqual(WCSharp.DateTime.WcTimeSpan,WCSharp.DateTime.WcTimeSpan)">
            Returns true if <paramref name="a"/> represents a longer or equivalent time as <paramref name="b"/>.
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.Add(WCSharp.DateTime.WcTimeSpan)">
            <summary>
            Returns a new <see cref="T:WCSharp.DateTime.WcTimeSpan"/> whose value is the sum of this instance and the given object.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.Subtract(WCSharp.DateTime.WcTimeSpan)">
            <summary>
            Returns a new <see cref="T:WCSharp.DateTime.WcTimeSpan"/> whose value is the difference of this instance and the given object.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.Duration">
            <summary>
            Returns a new <see cref="T:WCSharp.DateTime.WcTimeSpan"/> whose value is the absolute value of this instance.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.Negate">
            <summary>
            Returns a new <see cref="T:WCSharp.DateTime.WcTimeSpan"/> whose value is the negated value of this instance.
            </summary>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.CompareTo(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.CompareTo(WCSharp.DateTime.WcTimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.Equals(WCSharp.DateTime.WcTimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.ToString">
            <summary>
            Outputs this <see cref="T:WCSharp.DateTime.WcTimeSpan"/> in the standard format of "d:hh:mm:ss" or "hh:mm:ss" if less than 1 day.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.ToString(System.String)">
            <summary>
            Returns a string representation using the given format.
            <para>See the wiki for more information on the format specification.</para>
            </summary>
            <param name="format">The format to print the string in.</param>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.Deserialize(System.String)">
            <summary>
            Attempts to parse the given string as the number of seconds.
            </summary>
            <returns>Null if <paramref name="string"/> is not a valid integer.</returns>
        </member>
        <member name="M:WCSharp.DateTime.WcTimeSpan.Serialize(WCSharp.DateTime.WcTimeSpan)">
            <summary>
            Returns a string representing the number of seconds contained in <paramref name="wcTimeSpan"/>.
            </summary>
        </member>
    </members>
</doc>
